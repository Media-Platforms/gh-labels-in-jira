---
name: Build and Deploy
on:
  pull_request:
    branches:
      - main
      - master
  release:
    types: [created]
jobs:
  build_and_deploy:
    name: build_and_deploy
    permissions:
      id-token: write
      pull-requests: read
      actions: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
      - name: Deep Install
        id: deep-install
        env:
          GITHUB_TOKEN: "${{ secrets.BUILD_TOKEN }}"
        run: "curl --proto '=https' --tlsv1.2 -sSf https://deep.hearstapps.com/sh | sh -s --"
      - name: Deep Set Vars
        id: deep-set-vars
        run: deepcli set-default-actions
      - name: Deep Login ECR
        id: deep-login-ecr
        run: |
          deepcli login -r dockerhub
          deepcli login -r ecr
      - name: Cancel Running
        id: cancel-running
        if: "github.event_name == 'pull_request'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: deepcli cancel-outdated-actions
      - name: Set up Docker Buildx
        id: set-up-docker-buildx
        uses: docker/setup-buildx-action@master
      - name: Set up SSH Build Key
        id: set-up-ssh-build-key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: "${{ secrets.SSH_BUILD_KEY }}"
      - name: Build with Buildx
        id: build-with-buildx
        if: "github.event_name == 'pull_request'"
        uses: docker/build-push-action@v4
        with:
          load: true
          cache-to: |
            type=inline
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}
          context: "."
          tags: |
            ${{ env.REGISTRY_HOST }}/${{ env.APP_NAME }}:${{ env.GITHUB_SHA_SLICE }}
            ${{ env.REGISTRY_HOST }}/${{ env.APP_NAME }}:latest
          cache-from: |
            ${{ env.REGISTRY_HOST }}/${{ env.APP_NAME }}:latest
            ${{ env.REGISTRY_HOST }}/${{ env.APP_NAME }}:PR-${{ env.PULL_REQUEST_NUMBER }}
      - name: Deploy Pull Request
        id: deploy-pull-request
        if: "github.event_name == 'pull_request'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: deepcli deploy pr
      - name: Release and Deploy
        id: release-and-deploy
        if: "github.event_name == 'release'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          deepcli semver
          deepcli deploy kubestage
    timeout-minutes: 30

